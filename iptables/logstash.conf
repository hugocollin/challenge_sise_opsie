input {
  file {
    path => "/var/log/iptables.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  grok {
    match => { 
      "message" => "%{SYSLOGTIMESTAMP:timestamp}\s+%{HOSTNAME:host}\s+ACTION=%{DATA:action}\s+RULE=%{DATA:rule}\s+IN=%{DATA:intin}(?: OUT=%{DATA:intout})?\s+MAC=%{DATA:mac}\s+SRC=%{IP:ipsrc}\s+DST=%{IP:ipdst}\s+LEN=%{NUMBER:len}\s+TOS=%{NUMBER:tos}\s+PREC=%{DATA:prec}\s+TTL=%{NUMBER:ttl}\s+ID=%{NUMBER:id}( %{WORD:df})?\s+PROTO=%{WORD:proto}\s+SPT=%{NUMBER:portsrc}\s+DPT=%{NUMBER:portdst}\s+SEQ=%{NUMBER:seq}\s+ACK=%{NUMBER:ack}\s+WINDOW=%{NUMBER:window}\s+%{WORD:flags}( %{WORD:flags2})?\s+URGP=%{NUMBER:urgp}( UID=%{NUMBER:uid})?( GID=%{NUMBER:gid})?\s+MARK=%{DATA:mark}"
    }
  }
  mutate {
    remove_field => ["timestamp","host", "intin", "intout", "mac", "len", "tos", "prec", "ttl", "id", "df", "seq", "ack", "window", "flags", "flags2", "urgp", "uid", "gid", "mark", "log", "event"]
  }
}

output {
  syslog {
    host => "172.43.0.7"
    port => 514
    protocol => "tcp"
    codec => "json"
  }
}
